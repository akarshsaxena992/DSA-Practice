Search a 2D Matrix:


Method 1: tc=O(n*log(m))
bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int i,j;
        for(i=0;i<matrix.size(); i++)
        {
            int n=matrix[i].size();
            int low=0;
            int high=n-1;
            while(low<=high)
            {
                int mid=low+(high-low)/2;
                if(matrix[i][high]<target)
                {
                    break;
                }
                if(matrix[i][mid]==target)
                {
                    return true;
                }
                else if(matrix[i][mid]<target)
                {
                    low=mid+1;
                }
                else if(matrix[i][mid]>target)
                {
                    high=mid-1;
                }
            }
        }
        return false;
    }
    
    
    Method 2: tc=O(log(n*m))
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int n=matrix.size();
        int m=matrix[0].size();
        if(n==0) return false;
        int l=0;
        int h=(n*m)-1;
        while(l<=h)
        {
            int mid=(l+(h-l)/2);
            if(matrix[mid/m][mid%m]==target)
            {
                return true;
            }
            if(matrix[mid/m][mid%m]<target)
            {
                l=mid+1;
            }
            else{
                h=mid-1;
            }
        }
        return false;
    }
